services:
  # 1. Umbrel 反向代理
  app_proxy:
    environment:
      # 关键: 主机链 (匹配你的 id: tao-blinko)
      APP_HOST: tao-blinko_main_1
      # 关键: 端口链 (匹配 Blinko 内部端口)
      APP_PORT: 1111

  # 2. Blinko 应用服务 (原 'blinko-website')
  main:
    # 关键: 替换 'build:' 为 'image:'
    image: 'ghcr.io/blinko-app/blinko:latest'
    
    # 关键: 主机链 (匹配 APP_HOST)
    container_name: tao-blinko_main_1
    
    restart: always
    
    # 关键: 确保 'postgres' 服务名与 DATABASE_URL 中的主机名匹配
    depends_on:
      postgres:
        condition: service_healthy
        
    # 保留官方的环境变量
    environment:
      - NODE_ENV=production
      - NEXTAUTH_URL=http://localhost:1111
      - NEXT_PUBLIC_BASE_URL=http://localhost:1111
      - NEXTAUTH_SECRET=my_ultra_secure_nextauth_secret
      - DATABASE_URL=postgresql://postgres:mysecretpassword@postgres:5432/postgres
      
    # 关键: 端口链 (移除 'ports'，替换为 'expose')
    expose:
      - "1111"
      
    # 关键: 权限链 (Case 2)
    # 省略 'user:' 字段

  # 3. Postgres 数据库服务
  postgres:
    image: 'postgres:14'
    # 给予一个唯一的容器名
    container_name: tao-blinko_postgres_1
    restart: always
    
    # 保留官方的环境变量
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mysecretpassword
      
    # D (关键: 路径链)
    # 必须添加数据卷，否则数据会丢失！
    volumes:
      - ${APP_DATA_DIR}/postgres-data:/var/lib/postgresql/data
      
    # 关键: 权限链 (Case 2)
    # 省略 'user:' 字段，Postgres 镜像会自行处理
    
    # 保留健康检查
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "postgres"]
      interval: 5s
      timeout: 10s
      retries: 5